@page "/fetchdata"
@using System.Text.Json.Serialization
@using DietownikApp.Models
@using DietownikApp.Services
@inject LocalService HttpLocalService
@inject DietownikAPIService HttpDietownikAPIService
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}


@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Kcal</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.name</td>
                    <td>@product.kcal</td>

                </tr>
            }
        </tbody>
    </table>
}



<br />
@HttpLocalService.GetHttpClient().BaseAddress.ToString();
<br />
@HttpDietownikAPIService.GetHttpClient().BaseAddress.ToString();

@code {
    private WeatherForecast[]? forecasts;


    public class WeatherForecasts
    {
        [JsonPropertyName("data")]
        public WeatherForecast[] weathers { get; set; }
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }
        public int TemperatureC { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
        public string? Summary { get; set; }
    }
}

@code {
    private Product[]? products;

    protected override async Task OnInitializedAsync()
    {
        Products dataProducts = await HttpDietownikAPIService.GetHttpClient().GetFromJsonAsync<Products>("products");
        products = dataProducts.ProductsList;

        WeatherForecasts dataWeathrts = await HttpLocalService.GetHttpClient().GetFromJsonAsync<WeatherForecasts>("sample-data/weather.json");
        forecasts = dataWeathrts.weathers;
    }
}
